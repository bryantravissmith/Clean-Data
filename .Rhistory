mergedCost
mergedCost$total <- mergedCost$orderProp+mergedCost$orderCrop
mergedCost
mergeOrder <- order(mergedCost$total)
total <
total < mergedCost(mergedOrder)
total <- mergedCost(mergedOrder)
total <- mergedCost[mergedOrder]
total <- mergedCost[mergedOrder,]
total <- mergeCost[with(mergeCost, order(total,decreasing=TRUE)), ]
total <- mergedCost[with(mergeCost, order(total,decreasing=TRUE)), ]
total <- mergedCost[with(mergedCost, order(total,decreasing=TRUE)), ]
head(total)
hist(total$total)
?hist
hist(total$total,n=30)
boxplot(total$total)
boxplot(log(total$total+1))
boxplot(fatDf$orderFat)
par(mfrow(2,1))
par(mfrows(2,1))
par(mfrow=c(2,1))
boxplot(fatDf$orderFat)
boxplot(injDf$orderInj)
par(mfrow=c(1,2))
boxplot(fatDf$orderFat)
boxplot(injDf$orderInj)
?boxplot
getwd()
boxplot(injDf$orderInj,names=injDf$orderInjType)
file.edit("~/.Rprofile")
?Startup
?rpubs
?rpub
?rpubsUpload
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("github", "a3b149e2bce437b141eecdd56ba7723a78154c7a")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "a3b149e2bce437b141eecdd56ba7723a78154c7a")
oauth_endpoints("github")
myapp <- oauth_app("github", "a3b149e2bce437b141eecdd56ba7723a78154c7a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("https://github.com/login/oauth/authorize")
github
fromJson("https://api.github.com/users/jtleek/repos")
require(RJSONIO)
fromJson("https://api.github.com/users/jtleek/repos")
fromJSON("https://api.github.com/users/jtleek/repos")
jtleek <- fromJSON("https://api.github.com/users/jtleek/repos")
require(rjson)
install.packages("rjson")
require(rjson)
jtleek <- fromJSON("https://api.github.com/users/jtleek/repos",method='C')
jtleek <- fromJSON("https://api.github.com/users/jtleek/repos")
jtleek <- fromJSON(file="https://api.github.com/users/jtleek/repos")
jtleek
names(jtleek)
?fromJSON
jtleek <- fromJSON(file="https://api.github.com/users/jtleek/repos",method="C")
jtleek
jtleek[1]
jtleek[2]
jtleek[1]
jtleek[1]$NAME
jtleek[1]$name
jtleek[2]$name
jtleek[[1]]
jtleek[[2]]$name
jtleek[[1]]$name
length(jtleek)
for( i in 1:length(jtleek)){
print(jtleek[[i]]$name)
}
for( i in 1:length(jtleek)){
if (jtleek[[i]]$name == "datasharing" ){
print(i)
}
}
for( i in 1:length(jtleek)){
if (jtleek[[i]]$name == "datasharing" ){
names(jtleek[[i]])
}
}
for( i in 1:length(jtleek)){
if (jtleek[[i]]$name == "datasharing" ){
print(names(jtleek[[i]]))
}
}
for( i in 1:length(jtleek)){
if (jtleek[[i]]$name == "datasharing" ){
print(names(jtleek[[i]]))
print(jtleek[[i]]$created_at)
}
}
install.packages("sqldf")
?sqldf
library(sqldf)
?sqldf
getwd()
setwd("../")
data <- read.csv("data.csv")
acs <- read.csv("data.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select unique AGEP from acs")
data
G
G
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
sqldf("select unique * from acs")
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
library(XML)
theurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
tables <- readHTMLTable(theurl)
?XML
html <- htmlParse(theurl)
html
xml <- htmlTreeParse(theurl)
xml
xml[1]
xml[2]
xml[3]
xml[[1]]
xml[[2]]
xml[[1]]
html[1]
html
length(html)
?readline
readline(html)
html <- htmlTreeParse(theurl)
html
length(html)
length(html[1])
length(html[2])
length(html[3])
length(html[[1]])
html[1]
html[2]
html[3]
length(html[3])
length(html[[3]])
html[3]
webpage <- getURL(theurl)
library(RCurl)
theurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
webpage <- getURL(theurl)
webpage
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
webpage
webpage[10]
?nchars
?nchar
ncar(webpage[10])
nchar(webpage[10])
nchar(webpage[20])
nchar(webpage[30])
nchar(webpage[100])
file <- read.fwf("data.for")
file <- read.fwf("data.for",widths=c(9,8,8,8,8))
file
file[,4]
file <- read.fwf("data.for",widths=c(10,8,8,8,8))
file <- read.fwf("data.for",widths=c(10,8,8,8,8))
file
file <- read.fwf("data.for",widths=c(10,9,8,8,8))
file
file <- read.fwf("data.for",widths=c(10,9,9,8,8))
file
file <- read.fwf("data.for",widths=c(10,9,9,9,9))
file
file <- read.fwf("data.for",widths=c(11,9,9,9,9))
file
file <- read.fwf("data.for",widths=c(5,5,5,5))
file
file <- read.fwf("data.for",widths=c(14,5,5,5))
file
file <- read.fwf("data.for",widths=c(14,13,5,5))
file
file <- read.fwf("data.for",widths=c(14,13,13,5))
file
file <- read.fwf("data.for",widths=c(14,13,13,8))
file <- read.fwf("data.for",widths=c(14,13,13,8))
file
file <- read.fwf("data.for",widths=c(14,13,13,13))
file
file[4]
sum(file[4])
sum(as.numeric(file[4]))
29*1258
x = 1:10
y = 2*x+10
xtx <- x%*%x
library(MASS)
x = matrix(rep(1,10),
x
x <- rbind(rep(1,10),1:10)
x<-t(x)
xinv <- ginv(t(x)%*%x)
xinv
xinv%*%x
source('C:/Users/Bryan/Dropbox/R Projects/cleandata/run_analysis.R')
setwd("cleandata")
eatures <- read.fwf('features.txt',widths=c(100),as.is=TRUE)
fnum = numeric()
fname = character()
j = 1
for (i in 1:length(features[,1])){
if(  length(grep("mean|std",features[i,1])) >= 1){
temp <- strsplit(sub("^\\s","",features[i,1])," ")
fnum[j] = as.numeric(temp[[1]][1])
fname[j] = sub("\\(\\)","",temp[[1]][2])
j = j + 1
}
}
featuresDf = data.frame(col=fnum,name=fname)
x_train = read.fwf("./train/X_train.txt",header=FALSE,widths=rep(16,561))
?read.fwf
?read.
?read.csv
?read.fwf
read.tabel
?read.table
x_train = read.table("./train/X_train.txt",header=FALSE)
View(x_train)
features <- read.fwf('features.txt',widths=c(100),as.is=TRUE)
fnum = numeric()
fname = character()
j = 1
for (i in 1:length(features[,1])){
if(  length(grep("mean|std",features[i,1])) >= 1){
temp <- strsplit(sub("^\\s","",features[i,1])," ")
fnum[j] = as.numeric(temp[[1]][1])
fname[j] = sub("\\(\\)","",temp[[1]][2])
j = j + 1
}
}
featuresDf = data.frame(col=fnum,name=fname)
x_train = read.table("./train/X_train.txt",header=FALSE)
x_test = read.table("./test/X_test.txt",header=FALSE)
xData <- rbind(x_train,x_test)
y_train = read.csv("./train/y_train.txt",header=FALSE,as.is=T)
y_test = read.csv("./test/y_test.txt",header=FALSE,as.is=T)
yData <- rbind(y_train,y_test)
subject_train = read.csv("./train/subject_train.txt",header=FALSE, as.is=T)
subject_test = read.csv("./test/subject_test.txt",header=FALSE,as.is=T)
subjectData <- rbind(subject_train,subject_test)
rm(features);rm(subject_test);rm(subject_train);rm(x_test);rm(x_train);rm(y_train);rm(y_test);
activity <- read.csv("./activity_labels.txt",header=FALSE,as.is=T)
actnum = numeric()
actname = character()
for (i in 1:length(activity[,1])){
temp <- strsplit(activity[i,1]," ")
actnum[i] = as.numeric(temp[[1]][1])
actname[i] = temp[[1]][2]
}
activity = data.frame(index=actnum,name=actname,stringsAsFactors=F)
yData$name = rep("",length(yData[,1]))
for( i in 1:length(yData[,1])){
yData[i,2] = activity[activity$index==yData[i,1],]$name
}
rm(activity)
xData[featuredDf$col,]
xData[featuredDf$col]
View(featuresDf)
featuresDf
featuresDf$col
xData[,featuresDf$col]
xData <- xData[,featuresDf$col]
colnames(xData) <- featuresDf$name
View(xData)
View(subjectData)
View(yData)
xData$activity = rep("",length(xData[,1]))
for( i in 1:length(yData[,1])){
xData[i,"activity"] = activity[activity$index==yData[i,1],]$name
}
rm(activity)
View(xData)
activity <- read.csv("./activity_labels.txt",header=FALSE,as.is=T)
actnum = numeric()
actname = character()
for (i in 1:length(activity[,1])){
temp <- strsplit(activity[i,1]," ")
actnum[i] = as.numeric(temp[[1]][1])
actname[i] = temp[[1]][2]
}
activity = data.frame(index=actnum,name=actname,stringsAsFactors=F)
xData$activity = rep("",length(xData[,1]))
for( i in 1:length(yData[,1])){
xData$activity[i] = activity[activity$index==yData[i,1],]$name
}
View(xData)
source('C:/Users/Bryan/Dropbox/R Projects/cleandata/run_analysis.R')
View(subjectData)
View(subjectData)
activity <- read.csv("./activity_labels.txt",header=FALSE,as.is=T)
actnum = numeric()
actname = character()
for (i in 1:length(activity[,1])){
temp <- strsplit(activity[i,1]," ")
actnum[i] = as.numeric(temp[[1]][1])
actname[i] = temp[[1]][2]
}
activity = data.frame(index=actnum,name=actname,stringsAsFactors=F)
xData$activity = rep("",length(xData[,1]))
xData$subject = rep(0,length(xData[,1]))
for( i in 1:length(yData[,1])){
xData$activity[i] = activity[activity$index==yData[i,1],]$name
xData$subject[i] = subjectData[i,1]
}
rm(activity)
View(xData)
read.tabel("./activity_labels.txt",header=FALSE,as.is=T)
read.table("./activity_labels.txt",header=FALSE,as.is=T)
read.table('features.txt',as.is=true,header=FALSE)
read.table('features.txt',as.is=T,header=FALSE)
x_train = read.table("./train/X_train.txt",header=FALSE)
x_test = read.table("./test/X_test.txt",header=FALSE)
xData <- rbind(x_train,x_test)
xData <- xData[,featuresDf$col]
colnames(xData) <- featuresDf$name
y_train = read.csv("./train/y_train.txt",header=FALSE,as.is=T)
y_test = read.csv("./test/y_test.txt",header=FALSE,as.is=T)
yData <- rbind(y_train,y_test)
subject_train = read.csv("./train/subject_train.txt",header=FALSE, as.is=T)
subject_test = read.csv("./test/subject_test.txt",header=FALSE,as.is=T)
subjectData <- rbind(subject_train,subject_test)
rm(features);rm(subject_test);rm(subject_train);rm(x_test);rm(x_train);rm(y_train);rm(y_test);
activity <- read.table("./activity_labels.txt",header=FALSE,as.is=T)
xData$activity = rep("",length(xData[,1]))
xData$subject = rep(0,length(xData[,1]))
for( i in 1:length(yData[,1])){
xData$activity[i] = activity[activity[,1]==yData[i,1],]$name
xData$subject[i] = subjectData[i,1]
}
rm(activity)
xData$activity = rep("",length(xData[,1]))
xData$subject = rep(0,length(xData[,1]))
for( i in 1:length(yData[,1])){
xData$activity[i] = activity[activity[,1]==yData[i,1],2]
xData$subject[i] = subjectData[i,1]
}
activity <- read.table("./activity_labels.txt",header=FALSE,as.is=T)
xData$activity = rep("",length(xData[,1]))
xData$subject = rep(0,length(xData[,1]))
for( i in 1:length(yData[,1])){
xData$activity[i] = activity[activity[,1]==yData[i,1],2]
xData$subject[i] = subjectData[i,1]
}
View(xData)
summary(xData)
xData$activity
factors(xData$activity)
factor(xData$activity)
xData$activity = factor(xData$activity)
xData$activity
levels(xData$activity)
xData$activity <- factor(xData$activity)
rm(activity)
rm(eatures)
colnames(xData)
mean(xData)
mean(xData[,1:10])
xData[,1:10]
x_train = read.table("./train/X_train.txt",header=FALSE,as.is=T)
x_test = read.table("./test/X_test.txt",header=FALSE,as.is=T)
xData <- rbind(x_train,x_test)
xData <- xData[,featuresDf$col]
colnames(xData) <- featuresDf$name
y_train = read.csv("./train/y_train.txt",header=FALSE,as.is=T)
y_test = read.csv("./test/y_test.txt",header=FALSE,as.is=T)
yData <- rbind(y_train,y_test)
subject_train = read.csv("./train/subject_train.txt",header=FALSE, as.is=T)
subject_test = read.csv("./test/subject_test.txt",header=FALSE,as.is=T)
subjectData <- rbind(subject_train,subject_test)
rm(features);rm(subject_test);rm(subject_train);rm(x_test);rm(x_train);rm(y_train);rm(y_test);
activity <- read.table("./activity_labels.txt",header=FALSE,as.is=T)
xData$activity = rep("",length(xData[,1]))
xData$subject = rep(0,length(xData[,1]))
for( i in 1:length(yData[,1])){
xData$activity[i] = activity[activity[,1]==yData[i,1],2]
xData$subject[i] = subjectData[i,1]
}
xData$activity <- factor(xData$activity)
rm(activity)
View(xData)
class(xData[1,2])
mean(xData[,1])
mean(xData[,1:20])
mean(xData[,1:2])
mean(xData[,1])
tapply(xData[,1:10],mean)
tapply(xData[,1:2],mean)
xData[,1:2]
mean(xData[,featuresDf$name[1])
mean(xData[,featuresDf$name[1]])
mean(xData[,featuresDf$name])
xData[,featuresDf$name]
tapply(xData[,featuresDf$name],class)
?apply
apply(xData[,featuresDf$name],2,mean)
"mean(" + 1 + ")"
paste(c("mean(",1,")"))
paste("mean(",1,")")
paste("mean(",featuresDf$name, ")")
newNames = paste("mean(",featuresDf$name,")")
newNames = c(paste("mean(",featuresDf$name,")"),"activity","subject")
newNames
c(apply(xData[,featuresDf$name],2,mean),"WALKING",1)
c(apply(xData[,featuresDf$name],2,mean),"WALKING",1)[1]
c(apply(xData[,featuresDf$name],2,mean),"WALKING",1)[2]
c(apply(xData[,featuresDf$name],2,mean),"WALKING",1)[81]
matrx(null,ncol=81)
matrix(null,ncol=81)
data <- xData[xData$subject==1,]
data <- xData[xData$activity=="WALKING",]
data <- data[xData$subject=1,]
data <- data[xData$subject==1,]
data
xData$subjects
xData$subject
xData$subject==1
data <- data[xData$subject==1 & xData$activity="WALKING",]
data <- xData[xData$subject==1 & xData$activity="WALKING",]
data <- xData[xData$subject==1 & xData$activity=="WALKING",]
View(data)
mat <- matrix()
mat <- matrix()
for subject in 1:30{
for level in levels(xData$activities){
data <- xData[xData$subject==subject & xData$activity==level,]
row = c(apply(data[,featuresDf$name],2,mean),level,subject)
rbind(mat,row)
}
}
mat <- matrix()
for (subject in 1:30){
for (level in levels(xData$activities)){
data <- xData[xData$subject==subject & xData$activity==level,]
row = c(apply(data[,featuresDf$name],2,mean),level,subject)
rbind(mat,row)
}
}
View(mat)
mat <- matrix()
for (subject in 1:30){
for (level in levels(xData$activities)){
data <- xData[xData$subject==subject & xData$activity==level,]
row = c(apply(data[,featuresDf$name],2,mean),level,subject)
print(row)
}
}
newNames = c(paste("mean(",featuresDf$name,")"),"activity","subject")
data
apply(data[,featuresDf$name],2,mean)
row = c(apply(data[,featuresDf$name],2,mean),level,subject)
print(row)
mat <- matrix()
for (subject in 1:30){
for (level in levels(xData$activity)){
data <- xData[xData$subject==subject & xData$activity==level,]
row = c(apply(data[,featuresDf$name],2,mean),level,subject)
rbind(mat,row)
}
}
View(mat)
mat <- matrix(,ncol=length(featuresDf$name)+2)
for (subject in 1:30){
for (level in levels(xData$activity)){
data <- xData[xData$subject==subject & xData$activity==level,]
row = c(apply(data[,featuresDf$name],2,mean),level,subject)
rbind(mat,row)
}
}
View(mat)
levels(xData$activity)
for( level in levels(xData$activity)){print(level)}
mat <- matrix(,ncol=length(featuresDf$name)+2)
for (subject in 1:30){
for (level in levels(xData$activity)){
data <- xData[xData$subject==subject & xData$activity==level,]
row = c(apply(data[,featuresDf$name],2,mean),level,subject)
mat <- rbind(mat,row)
}
}
View(mat)
mat <- mat[-1,]
mat
View(mat)
df = data.frame(mat)
colnames(df) <- newNames
View(df)
source('C:/Users/Bryan/Dropbox/R Projects/cleandata/run_analysis.R')
write.csv(df,file="tidy.csv")
source('C:/Users/Bryan/Dropbox/R Projects/cleandata/run_analysis.R')
read.csv("tidy.csv")
source('C:/Users/Bryan/Dropbox/R Projects/cleandata/run_analysis.R')
write.csv(df,file="tidy.txt")
source('C:/Users/Bryan/Dropbox/R Projects/cleandata/run_analysis.R')
